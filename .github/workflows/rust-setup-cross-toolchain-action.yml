name: Rust Multiple targets Build

# Trigger condition: Push to the main branch or trigger manually
on:
  push:
    branches: [ main ]
    tags: [ 'v*', '*' ]  # Tag pushing
  pull_request: # Add a merge trigger
    branches: [ main ]
  workflow_dispatch:     # Manually triggered

# Permission Settings: Allow content to be written in order to upload products
permissions:
  contents: write

jobs:
  test:
    strategy:
      matrix:
        rust:
          - stable
          - nightly
        target:
          - aarch64-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - riscv64gc-unknown-linux-musl
          - x86_64-unknown-linux-musl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      # Installing the Cross-Compilation Toolchain (Linux)
      - name: Install Cross-Compilation Tools (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential
        shell: bash
      - name: Install Cross-Compilation Tools (Linux)
        if: matrix.os == 'ubuntu-latest' && (matrix.target == 'aarch64-unknown-linux-musl'||
          matrix.target == 'riscv64gc-unknown-linux-musl'|| matrix.target == 'x86_64-unknown-linux-musl' )
        run: |
          sudo apt-get update
          sudo apt-get install musl-tools
        shell: bash
      - run: cargo test --verbose